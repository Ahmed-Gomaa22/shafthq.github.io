"use strict";(self.webpackChunkshaft_user_guide=self.webpackChunkshaft_user_guide||[]).push([[717],{4137:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=o.createContext({}),l=function(e){var r=o.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=l(e.components);return o.createElement(p.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},m=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=l(t),m=n,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return t?o.createElement(f,s(s({ref:r},u),{},{components:t})):o.createElement(f,s({ref:r},u))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i[c]="string"==typeof e?e:n,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7508:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=t(7462),n=(t(7294),t(4137));const a={id:"PropertyTypes",title:"Property Types",sidebar_label:"Types"},s=void 0,i={unversionedId:"Properties/PropertyTypes",id:"Properties/PropertyTypes",title:"Property Types",description:"Please note that the Configuration Manager will be deprecated, and you can now refer to this page to configure your execution properties.",source:"@site/docs/Properties/PropertyTypes.md",sourceDirName:"Properties",slug:"/Properties/PropertyTypes",permalink:"/docs/Properties/PropertyTypes",draft:!1,editUrl:"https://github.com/ShaftHQ/shafthq.github.io/blob/master/docs/Properties/PropertyTypes.md",tags:[],version:"current",frontMatter:{id:"PropertyTypes",title:"Property Types",sidebar_label:"Types"},sidebar:"docs",previous:{title:"First Steps",permalink:"/docs/Getting_Started/Prerequisites"},next:{title:"List",permalink:"/docs/Properties/PropertiesList"}},p={},l=[{value:"File-based",id:"file-based",level:3},{value:"Code-based",id:"code-based",level:3},{value:"CLI-based (for unattended execution)",id:"cli-based-for-unattended-execution",level:3},{value:"Priorities",id:"priorities",level:3}],u={toc:l};function c(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,o.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Please note that the Configuration Manager will be deprecated, and you can now refer to this page to configure your execution properties."),(0,n.kt)("h3",{id:"file-based"},"File-based"),(0,n.kt)("p",null,"This is the traditional way of configuring SHAFT properties, using this approach you can simply create your own properties file under ",(0,n.kt)("inlineCode",{parentName:"p"},"src/main/resources/properties/custom.properties"),".\nHere's a sample of what a properties file can look like:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-properties"},"baseURL=http://www.mytestdomain.com\nexecutionAddress=local\ntargetOperatingSystem=WINDOWS\ntargetBrowserName=firefox\nheadlessExecution=true\ncreateAnimatedGif=true\nvideoParams_recordVideo=true\n")),(0,n.kt)("p",null,"You can add all your custom properties in one or more files as you see fit. And you can refer to the below table for a full list of supported properties."),(0,n.kt)("h3",{id:"code-based"},"Code-based"),(0,n.kt)("p",null,"If you're on the latest SHAFT version you can now set any property programmatically as well to easily read/write properties during runtime."),(0,n.kt)("p",null,"To write values:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"SHAFT.Properties.browserStack.set().username(username);\nSHAFT.Properties.browserStack.set().accessKey(accessKey);\nSHAFT.Properties.browserStack.set().platformVersion(platformVersion);\nSHAFT.Properties.browserStack.set().deviceName(deviceName);\nSHAFT.Properties.browserStack.set().appUrl(appUrl);\nSHAFT.Properties.browserStack.set().customID(customID);\nSHAFT.Properties.browserStack.set().appName(appName);\n")),(0,n.kt)("p",null,"To read values:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"username = SHAFT.Properties.browserStack.username();\naccessKey = SHAFT.Properties.browserStack.accessKey();\nplatformVersion = SHAFT.Properties.browserStack.platformVersion();\ndeviceName = SHAFT.Properties.browserStack.deviceName();\nappUrl = SHAFT.Properties.browserStack.appUrl();\ncustomID = SHAFT.Properties.browserStack.customID();\nappName = SHAFT.Properties.browserStack.appName();\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")," : "),(0,n.kt)("p",null,"you want to set targetBrowserName to MicrosoftEdge insted of default value chrome\nin your before method or before you initiate your driver you should do like below "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'      \n    @BeforeMethod\n    public void beforeMethod() {\n        SHAFT.Properties.web.set().targetBrowserName("MicrosoftEdge");\n        driver = new SHAFT.GUI.WebDriver();\n    }\n')),(0,n.kt)("p",null,'you can replace "MicrosoftEdge" with any property from table below .'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"OR"),"\nyou can use Browser library from selenium as following"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"    import com.shaft.driver.SHAFT;\n    import org.openqa.selenium.remote.Browser;\n    import org.testng.annotations.BeforeMethod;\n    \n    @BeforeMethod\n    public void beforeMethod() {\n        SHAFT.Properties.web.set().targetBrowserName(Browser.EDGE.browserName()); ;\n        driver = new SHAFT.GUI.WebDriver();\n    }\n")),(0,n.kt)("p",null,"Note that it's recommended to set any static values that won't change during execution, or values that you wish to later override from your CLI execution (CI/CD server) in external property files using the first approach."),(0,n.kt)("h3",{id:"cli-based-for-unattended-execution"},"CLI-based (for unattended execution)"),(0,n.kt)("p",null,"This is the third and final way to set/override SHAFT's existing default configuration. You will usually use this to execute your tests from a CI/CD pipeline.\nCLI properties override the engine's defaults, and any properties that you've already defined in your files."),(0,n.kt)("p",null,"Here's a sample to set values from your test command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-commandline"},'mvn -e test "-DretryMaximumNumberOfAttempts=2" "-DexecutionAddress=localhost:4444" "-DtargetOperatingSystem=LINUX" "-DtargetBrowserName=firefox" "-DheadlessExecution=true" "-DgenerateAllureReportArchive=true" "-Dtest=${GLOBAL_TESTING_SCOPE}"\n')),(0,n.kt)("h3",{id:"priorities"},"Priorities"),(0,n.kt)("p",null,"Since there are many ways to set SHAFT properties you need to know how the priorities work. The value on the left overrides the value on the right.\n",(0,n.kt)("inlineCode",{parentName:"p"},"Hard-coded > CLI > Files > Defaults")))}c.isMDXComponent=!0}}]);